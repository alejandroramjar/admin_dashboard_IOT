# Generated by Django 4.2.15 on 2024-09-07 18:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dispositivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=200)),
                ('protocolo', models.CharField(blank=True, choices=[('mqtt', 'MQTT'), ('http', 'HTTP')], max_length=200, null=True)),
                ('identificador', models.CharField(max_length=200, unique=True)),
                ('latitud', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
                ('longitud', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Provincia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(choices=[('Pinar del Río', 'Pinar del Río'), ('Artemisa', 'Artemisa'), ('La Habana', 'La Habana'), ('Mayabeque', 'Mayabeque'), ('Matanzas', 'Matanzas'), ('Cienfuegos', 'Cienfuegos'), ('Villa Clara', 'Villa Clara'), ('Sancti Spíritus', 'Sancti Spíritus'), ('Ciego de Ávila', 'Ciego de Ávila'), ('Camagüey', 'Camagüey'), ('Las Tunas', 'Las Tunas'), ('Holguín', 'Holguín'), ('Granma', 'Granma'), ('Santiago de Cuba', 'Santiago de Cuba'), ('Guantánamo', 'Guantánamo'), ('Isla de la Juventud', 'Isla de la Juventud')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='RegistroVariable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.FloatField()),
                ('unidad', models.CharField(default='C', max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('dispositivo', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.dispositivo')),
                ('variable', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.variable')),
            ],
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('provincia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='municipios', to='accounts.provincia')),
            ],
        ),
        migrations.AddField(
            model_name='dispositivo',
            name='municipio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispositivos', to='accounts.municipio'),
        ),
        migrations.AddField(
            model_name='dispositivo',
            name='variables',
            field=models.ManyToManyField(to='accounts.variable'),
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('carnet_identidad', models.CharField(help_text='Máximo 11 caracteres', max_length=11, unique=True)),
                ('phone', models.CharField(blank=True, help_text="Ingrese el número de teléfono en el formato: '5x-xx-xx-xx'", max_length=8, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\d{8}$')])),
                ('dispositivos', models.ManyToManyField(related_name='usuarios', to='accounts.dispositivo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('municipio', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuario', to='accounts.municipio')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
